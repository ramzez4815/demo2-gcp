apiVersion: apps/v1
kind: Deployment
metadata:
  name: ghost
  labels:
    app: ghost
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ghost
  template:
    metadata:
      labels:
        app: ghost
        unit: mycloudsql
    spec:
      containers:
      # ghost container
      - name: ghost-container
        image: ghost:alpine
        # envs to run ghost in production
        env:
        # CloudSQL credentials to connect with the Proxyuser
        - name: database__connection__user
         # referencing to secret file
          valueFrom:
            secretKeyRef:
              name: sql-info
              key: user
        - name: database__connection__password
          valueFrom:
            secretKeyRef:
              name: sql-info
              key: password
        # end of Cloud SQL secrets
        - name: database__connection__host
          value: "127.0.0.1"
        # also recommended to put the database name inside a secret file
        - name: database__connection__database
          value: demo3
        - name: url
          value: "http://your_url.com"
        - name: NODE_ENV
          value: production
        # end of envs
        imagePullPolicy: IfNotPresent
        # ghost always starts on this port
        ports:
          - containerPort: 2368
        volumeMounts:
      # cloudsql proxy container
      - name: cloudsql-proxy
        image: gcr.io/cloudsql-docker/gce-proxy:latest
        command: ["/cloud_sql_proxy",
                  "-instances=epam-001:us-central1:demo3=tcp:3306",
                  "-credential_file=/secrets/cloudsql/credentials.json"]          
        volumeMounts:
        - name: sql-credentials
          mountPath: /secrets/cloudsql
          readOnly: true
      volumes:
      # db credentials stored in this volume to access our mysql
      - name: sql-credentials
        secret:
          secretName: sql-crendentials
      - name: cloudsql
        emptyDir:
      # persistent storage used to store our themes and images